; Ergebnis ist StringList (mehrere Einträge möglich);
; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

if ( count ( $ResultList$ ) = "0" )
	comment "No installations of " + $ProductName$ + " found in registry. Nothing to do"
else
	comment "Found at least one installation of " + $ProductName$ + " in registry, try to deinstall"
	for %s% in $ResultList$ do Sub_uninstall
endif

[Sub_uninstall]
Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))

Message "Uninstalling " + $ProductName$ + " " + $RegBitScope$ + " ..."

Set $UninstallProgram$ = GetRegistryValue($RegId$, "UninstallString", $RegBitScope$)
; Der Registry-Wert UninstallProgramm enthält selbst am Anfang und Ende Anführungszeichen, die nachfolgend zu Problemen führen
; mit takeString und splitString können die eliminiert werden
Set $UninstallProgram$ = takeString (1, splitString ( $UninstallProgram$ , '"'))	
if not (FileExists($UninstallProgram$))
	LogError "Suspicious! Found entry of installer in Registry, but $UninstallProgramm$ does not exist!?"
	isFatalError
endif

Set $InstallDir$ = GetRegistryValue($RegId$, "InstallLocation", $RegBitScope$)

Winbatch_uninstall
Set $ExitCode$ = getLastExitCode
if stringToBool(isInnoExitcodeFatal($ExitCode$, "True", $ErrorString$))
	isFatalError
endif

;löscht vielleicht vorhandene Überbleibsel des Programmes
if FileExists($InstallDir$)
	Files_uninstall
endif

if $DesktopLink$ = "true"
	comment "Delete common desktop link"
	Linkfolder_delete_desktoplink	
endif

comment "include custom post deinstall file"
set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
if not ($CustomPostDeinstall$ = "none")
	if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
		include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
	endif
endif

if ($UserDataDir$ = "yes")
	Registry_uninstall_policies
endif

[Winbatch_uninstall]
"$UninstallProgram$" $SilentOption$ /NORESTART /nocancel /SUPPRESSMSGBOXES

[Linkfolder_delete_desktoplink]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element $ProductName$

[Files_uninstall]
del -sf "$InstallDir$\"

[Registry_uninstall_policies]
deletekey [HKLM\SOFTWARE\Policies\Chromium]
