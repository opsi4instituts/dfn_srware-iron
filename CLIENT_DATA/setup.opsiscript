; ----------------------------------------------------------------
; Copyright (c) uib gmbh (www.uib.de)
; This sourcecode is owned by uib
; and published under the Terms of the General Public License.
; credits: http://www.opsi.org/en/credits/
; ----------------------------------------------------------------

[Actions]
; common Values for (un)installation
include_insert "common.opsiinc"

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError "No Space"
else
	Message "Installing " + $PrettyName$ + " ..."

	comment "Show product picture"
	ShowBitmap "%ScriptPath%\" + $ProductId$ + ".png" $PrettyName$

   	if FileExists("%ScriptPath%\delsub.opsiscript")
   		comment "Start uninstall sub section"
   		Sub "%ScriptPath%\delsub.opsiscript"
   	endif

	if ($INST_SystemType$ = "64 Bit System") and (($INST_architecture$ = "system specific") or ($INST_architecture$ = "both") or ($INST_architecture$ = "64 only"))
		Message "Installing " + $PrettyName$ + " 64 Bit..."
		comment "Start setup program"
		Winbatch_install_64
		Sub_check_exitcode

		comment "Test for installation success"
		Set $SearchPattern$ = $PrettyName$
		; Parameter: $SearchPattern$ Suchbegriff in Registry
		Sub_search_registry64_uninstall_keys
		; R체ckgabewert: $ResultList$ gefundene Eintr채ge

		Switch count ($ResultList$)
			Case "0"
				logError "Fatal: After Installation " + $PrettyName$ + " could not be found in " + $RegPathUninstall$
				isFatalError
			EndCase
			Case "1"
				Set $RegId$ = takeSTring(0, $ResultList$)
				comment "Get 'InstallLocation' from registry for path to exe"
				Set $InstallDir$ = GetRegistryStringValue64("[" + $RegPathUninstall$ + "\" + $RegId$ + "] InstallLocation")
				Set $InstallDirExe$ = $InstallDir$ + "\" + $Exe$
				if ($INST_architecture$ = "both")
					Set $ProductName$ = $PrettyName$ + " (64 bit)"			
				else
					Set $ProductName$ = $PrettyName$
				endif
	
				set $DesktopIcon$ = getProductProperty("desktopicon","no")
				if $DesktopIcon$ = "yes"
					comment "Create common desktop icon"
					Linkfolder_install_desktopicon	
				endif

				comment "include custom post install file"
				set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
				if not ($CustomPostInstall$ = "none")
					if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
						include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
					endif
				endif
			EndCase
		EndSwitch
	endif
	
	if ($INST_SystemType$ = "32 Bit System") or (($INST_architecture$ = "both") or ($INST_architecture$ = "32 only"))
		Message "Installing " + $PrettyName$ + " 32 Bit..."
		comment "Start setup program"
		Winbatch_install_32
		Sub_check_exitcode

		comment "Test for installation success"
		Set $SearchPattern$ = $PrettyName$
		; Parameter: $SearchPattern$ Suchbegriff in Registry
		Sub_search_registry32_uninstall_keys
		; R체ckgabewert: $ResultList$ gefundene Eintr채ge

		Switch count ($ResultList$)
			Case "0"
				logError "Fatal: After Installation " + $PrettyName$ + " could not be found in " + $RegPathUninstall$
				isFatalError
			EndCase
			Case "1"
				Set $RegId$ = takeSTring(0, $ResultList$)
				comment "Get 'InstallLocation' from registry for path to exe"
				Set $InstallDir$ = GetRegistryStringValue32("[" + $RegPathUninstall$ + "\" + $RegId$ + "] InstallLocation")
				Set $InstallDirExe$ = $InstallDir$ + "\" + $Exe$
				if ($INST_architecture$ = "both")
					Set $ProductName$ = $PrettyName$ + " (32 bit)"
				else
					Set $ProductName$ = $PrettyName$
				endif			
	
				set $DesktopIcon$ = getProductProperty("desktopicon","no")
				if $DesktopIcon$ = "yes"
					comment "Create common desktop icon"
					Linkfolder_install_desktopicon	
				endif

				comment "include custom post install file"
				set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
				if not ($CustomPostInstall$ = "none")
					if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
						include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
					endif
				endif
			EndCase
		EndSwitch
	endif
endif

[Winbatch_install_32]
; http://unattended.sourceforge.net/InnoSetup_Switches_ExitCodes.html
; You may create setup answer file by: setup.exe /SAVEINF="filename"
; You may use an answer file by the parameter /LOADINF="filename"
"%ScriptPath%\$Setupfile32$" /LOADINF="%ScriptPath%\$SetupIniFile32$" /verysilent /norestart /nocancel /SUPPRESSMSGBOXES

[Winbatch_install_64]
; http://unattended.sourceforge.net/InnoSetup_Switches_ExitCodes.html
; You may create setup answer file by: setup.exe /SAVEINF="filename"
; You may use an answer file by the parameter /LOADINF="filename"
"%ScriptPath%\$Setupfile64$" /LOADINF="%ScriptPath%\$SetupIniFile64$" /verysilent /norestart /nocancel /SUPPRESSMSGBOXES

[Linkfolder_install_desktopicon]
set_basefolder common_desktopdirectory
set_subfolder ""

set_link
 	name: $ProductName$
 	target: $InstallDirExe$
end_link

