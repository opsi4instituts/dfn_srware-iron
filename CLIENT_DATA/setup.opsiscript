; ----------------------------------------------------------------
; Copyright (c) uib gmbh (www.uib.de)
; This sourcecode is owned by uib
; and published under the Terms of the General Public License.
; credits: http://www.opsi.org/en/credits/
; ----------------------------------------------------------------

[Actions]
; common Values for (un)installation
include_insert "common.opsiinc"

ChangeDirectory "%SCRIPTPATH%"

;Set $MinimumSpace$    = GetProductProperty("minimumspace","272 MB")
if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
        LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
        isFatalError "No Space!"
else
        comment "Space OK"
endif
if not( FileExists($Setupfile64$) )
        LogError "Setupfile NOT exists (" + $Setupfile64$ +")"
        isFatalError "No Setupfile!"
else
        comment "Setupfile OK (exists)"
endif

Message "Installing " + $PrettyName$ + " ..."
comment "Show product picture"
ShowBitmap "%ScriptPath%\o4i.png"  $PrettyName$

   	if FileExists("%ScriptPath%\delsub.opsiscript")
   		comment "Start uninstall sub section"
   		Sub "%ScriptPath%\delsub.opsiscript"
   	endif

	for %p% in $KillProcList$ do Sub_kill-process

	if ($INST_SystemType$ = "64 Bit System") and (($INST_architecture$ = "system specific") or ($INST_architecture$ = "both") or ($INST_architecture$ = "64 only"))
		Message "Installing " + $PrettyName$ + " 64 Bit..."
		comment "Start setup program"
		Winbatch_install_64
		Sub_check_exitcode
		killtask "firefox64.exe"
		killtask "chrome.exe"

		comment "Test for installation success"
		Set $SearchPattern$ = $PrettyName$
		; Parameter: $SearchPattern$ Suchbegriff in Registry
		Sub_search_registry64_uninstall_keys
		; Rückgabewert: $ResultList$ gefundene Einträge

		Switch count ($ResultList$)
			Case "0"
				logError "Fatal: After Installation " + $PrettyName$ + " could not be found in " + $RegPathUninstall$
				isFatalError
			EndCase
			Case "1"
				Set $RegId$ = takeSTring(0, $ResultList$)
				comment "Get 'InstallLocation' from registry for path to exe"
				Set $InstallDir$ = GetRegistryStringValue64("[" + $RegPathUninstall$ + "\" + $RegId$ + "] InstallLocation")
				Set $InstallDirExe$ = $InstallDir$ + "\" + $Exe$
				if ($INST_architecture$ = "both")
					Set $ProductName$ = $PrettyName$ + " (64 bit)"			
				else
					Set $ProductName$ = $PrettyName$
				endif
	
				set $DesktopIcon$ = getProductProperty("desktopicon","no")
				if $DesktopIcon$ = "yes"
					comment "Create common desktop icon"
					Linkfolder_install_desktopicon	
				endif

				comment "include custom post install file"
				set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
				if not ($CustomPostInstall$ = "none")
					if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
						include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
					endif
				endif
			EndCase
		EndSwitch
	endif
	
	if ($INST_SystemType$ = "32 Bit System") or (($INST_architecture$ = "both") or ($INST_architecture$ = "32 only"))
		Message "Installing " + $PrettyName$ + " 32 Bit..."
		comment "Start setup program"
		Winbatch_install_32
		Sub_check_exitcode
		killtask "firefox.exe"
		killtask "chrome.exe"

		comment "Test for installation success"
		Set $SearchPattern$ = $PrettyName$
		; Parameter: $SearchPattern$ Suchbegriff in Registry
		Sub_search_registry32_uninstall_keys
		; Rückgabewert: $ResultList$ gefundene Einträge

		Switch count ($ResultList$)
			Case "0"
				logError "Fatal: After Installation " + $PrettyName$ + " could not be found in " + $RegPathUninstall$
				isFatalError
			EndCase
			Case "1"
				Set $RegId$ = takeSTring(0, $ResultList$)
				comment "Get 'InstallLocation' from registry for path to exe"
				Set $InstallDir$ = GetRegistryStringValue32("[" + $RegPathUninstall$ + "\" + $RegId$ + "] InstallLocation")
				Set $InstallDirExe$ = $InstallDir$ + "\" + $Exe$
				if ($INST_architecture$ = "both")
					Set $ProductName$ = $PrettyName$ + " (32 bit)"
				else
					Set $ProductName$ = $PrettyName$
				endif			
	
				if $DesktopIcon$ = "yes"
					comment "Create common desktop icon"
					Linkfolder_install_desktopicon	
				endif
				
				comment "include custom post install file"
				set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
				if not ($CustomPostInstall$ = "none")
					if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
						include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
					endif
				endif
			EndCase
		EndSwitch
	endif
	
if ($UserDataDir$ = "yes")
	Registry_install_user-data-dir
endif

if not ($DefaultBrowser$ = "user")
	if ($DefaultBrowser$ = "yes")
		Set $DefaultBrowser$ = "1"
	else
		Set $DefaultBrowser$ = "0"
	endif
	Registry_install_defaultbrowser
endif

;ExtensionsForceList
Set $Counter$ = "1"
for %e% in $ExtForceList$ do Sub_ext-install-force

; bei neuem Tab soll kein extra Suchfeld angezeigt werden, da immer "Bing" als Suchmaschine verwendet wird (verwirrend)
; http://www.srware.net/forum/viewtopic.php?f=18&t=14250&p=35580
; http://www.srware.net/downloads/NewTabWithoutSearch.zip 
; Achtung 'resource.pak' ist versionsabhängig, sprich muss (regelmäßig?) erneuert werden
if ($DisableBing$ = "yes")
	comment "Replace file resources.pak"
	Files_install_resources
endif

;DefaultSearchProvider (DSP)
if not ($DefaultSearchProvider$ = "none")
	Set $DSPShortName$ = takeString(0,splitString($DefaultSearchProvider$, "|"))
	Set $DSPLongName$ = takeString(1,splitString($DefaultSearchProvider$, "|"))
	Set $DSPUrl$ = takeString(2,splitString($DefaultSearchProvider$, "|"))
	Registry_install_default-search-provider
endif

[Sub_kill-process]
if not ("%p%" = "")
	killtask "%p%"
endif

[Sub_ext-install-force]
if not ("%e%" = "none")
	; Eintrag splitten nach | links davon ist ein Name (nur zur Übersichtlichkeit in Property!), rechts der eigentliche Eintrag
	Set $ExtName$ = takeString(0,splitString("%e%", '|'))
	Set $RegVal$ = takeString(1,splitString("%e%", '|'))
	comment "Force install of extension: " + $ExtName$
	Registry_install_ext-force
	; Counter erhöhen, falls noch weiterer Eintrag
	Set $Counter$ = calculate("1+")
endif

[Winbatch_install_32]
; http://unattended.sourceforge.net/InnoSetup_Switches_ExitCodes.html
; You may create setup answer file by: setup.exe /SAVEINF="filename"
; You may use an answer file by the parameter /LOADINF="filename"
"%ScriptPath%\$Setupfile32$" /LOADINF="%ScriptPath%\$SetupIniFile32$" $SetupSilent$ 

[Winbatch_install_64]
; http://unattended.sourceforge.net/InnoSetup_Switches_ExitCodes.html
; You may create setup answer file by: setup.exe /SAVEINF="filename"
; You may use an answer file by the parameter /LOADINF="filename"
"%ScriptPath%\$Setupfile64$" /LOADINF="%ScriptPath%\$SetupIniFile64$" $SetupSilent$

[Registry_install_user-data-dir]
openkey [$RegPathPolicy$]
set "UserDataDir" = REG_SZ: "${roaming_app_data}\Chromium"
; diskcache lokal belassen!
set "DiskCacheDir" = REG_SZ:"${local_app_data}\Chromium"

[Registry_install_defaultbrowser]
openkey [$RegPathPolicy$]
set "DefaultBrowserSettingEnabled" = REG_DWORD:$DefaultBrowser$

[Registry_install_ext-force]
openkey [$RegPathPolicy$\ExtensionInstallForcelist]
set "$Counter$" = REG_SZ: "$RegVal$"

[Registry_install_default-search-provider]
openkey [$RegPathPolicy$]
set "DefaultSearchProviderEnabled" = REG_DWORD:1
set "DefaultSearchProviderKeyword" = REG_SZ:"$DSPShortName$"
set "DefaultSearchProviderName" = REG_SZ:"$DSPLongName$"
set "DefaultSearchProviderSearchURL" = REG_SZ:"$DSPUrl$"

[Files_install_resources]
Copy "%ScriptPath%\resources.pak" $InstallDir$

[Linkfolder_install_desktopicon]
set_basefolder common_desktopdirectory
set_subfolder ""

set_link
 	name: $ProductName$
 	target: $InstallDirExe$
end_link
