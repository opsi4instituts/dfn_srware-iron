[Actions]
; common Values for (un)installation
include_insert "common.opsiinc"

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError
	; Stop process and set installation status to failed
else
	if FileExists("%ScriptPath%\delsub.opsiscript")
		comment "Start uninstall sub section"
		Sub "%ScriptPath%\delsub.opsiscript"
	endif

	Message "Installing %installingProdName% (%installingProdVersion%) " + $InstArch$ + " Bit..."	

	if not (count($KillProcList$) = "0")
		for %p% in $KillProcList$ do Sub_kill-process
	endif

	comment "Start setup program"
	Winbatch_install
	Set $ExitCode$ = getLastExitCode
	if stringToBool(isInnoExitcodeFatal($ExitCode$, "False", $ErrorString$))
		isFatalError
    endif
    ; Ergebnis ist StringList (mehrere Einträge möglich);
    ; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
    ; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
    Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

	if ( count ($ResultList$) = "0" )
		logError "Fatal: After Installation '" + $ProductName$ + "' could not be found in registry"
		isFatalError
	else
		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))

		comment "Check version"
		Set $InstalledVersion$ = GetRegistryValue($RegId$, "DisplayVersion", $RegBitScope$)
		if not ($InstalledVersion$ = $ProductVersion$)
			LogError "Wrong version number found, something went wrong."
			isFatalError
		endif

		comment "Get 'InstallLocation' from registry for path to exe"
		Set $InstallDir$ = takestring (0, splitString(GetRegistryValue($RegId$, "InstallLocation", $RegBitScope$) , "," ) )
		Set $PathToExe$ = $InstallDir$ + $Exe$

		if ($UserDataDir$ = "yes")
			Registry_install_user-data-dir
		endif

		if not ($DefaultBrowser$ = "user")
			if ($DefaultBrowser$ = "yes")
				Set $DefaultBrowser$ = "1"
			else
				Set $DefaultBrowser$ = "0"
			endif
			Registry_install_defaultbrowser
		endif

		;ExtensionsForceList
		Set $Counter$ = "1"
		for %e% in $ExtForceList$ do Sub_ext-install-force

		; bei neuem Tab soll kein extra Suchfeld angezeigt werden, da immer "Bing" als Suchmaschine verwendet wird (verwirrend)
		; http://www.srware.net/forum/viewtopic.php?f=18&t=14250&p=35580
		; http://www.srware.net/downloads/NewTabWithoutSearch.zip 
		; Achtung 'resource.pak' ist versionsabhängig, sprich muss (regelmäßig?) erneuert werden
		if ($DisableBing$ = "yes")
			comment "Replace file resources.pak"
			Files_install_resources
		endif

		;DefaultSearchProvider (DSP)
		if not ($DefaultSearchProvider$ = "none")
			Set $DSPShortName$ = takeString(0,splitString($DefaultSearchProvider$, "|"))
			Set $DSPLongName$ = takeString(1,splitString($DefaultSearchProvider$, "|"))
			Set $DSPUrl$ = takeString(2,splitString($DefaultSearchProvider$, "|"))
			Registry_install_default-search-provider
		endif

		if $DesktopLink$ = "true"
			comment "Create common desktop link"
			Linkfolder_create_desktoplink
		endif

		comment "include custom post install file"
		set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
		if not ($CustomPostInstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
			endif
		endif
	endif
endif

[Sub_kill-process]
if not ("%p%" = "")
	killtask "%p%"
endif

[Sub_ext-install-force]
if not ("%e%" = "none")
	; Eintrag splitten nach | links davon ist ein Name (nur zur Übersichtlichkeit in Property!), rechts der eigentliche Eintrag
	Set $ExtName$ = takeString(0,splitString("%e%", '|'))
	Set $RegVal$ = takeString(1,splitString("%e%", '|'))
	comment "Force install of extension: " + $ExtName$
	Registry_install_ext-force
	; Counter erhöhen, falls noch weiterer Eintrag
	Set $Counter$ = calculate("1+")
endif

[Winbatch_install]
; http://unattended.sourceforge.net/InnoSetup_Switches_ExitCodes.html
; You may create setup answer file by: setup.exe /SAVEINF="filename"
; You may use an answer file by the parameter /LOADINF="filename"
"%ScriptPath%\$Setupfile$" /LOADINF="%ScriptPath%\$SetupIniFile$" $SilentOption$ /norestart /nocancel /SUPPRESSMSGBOXES

[Registry_install_user-data-dir]
openkey [$RegPathPolicy$]
set "UserDataDir" = REG_SZ: "${roaming_app_data}\Chromium"
; diskcache lokal belassen!
set "DiskCacheDir" = REG_SZ:"${local_app_data}\Chromium"

[Registry_install_defaultbrowser]
openkey [$RegPathPolicy$]
set "DefaultBrowserSettingEnabled" = REG_DWORD:$DefaultBrowser$

[Registry_install_ext-force]
openkey [$RegPathPolicy$\ExtensionInstallForcelist]
set "$Counter$" = REG_SZ: "$RegVal$"

[Registry_install_default-search-provider]
openkey [$RegPathPolicy$]
set "DefaultSearchProviderEnabled" = REG_DWORD:1
set "DefaultSearchProviderKeyword" = REG_SZ:"$DSPShortName$"
set "DefaultSearchProviderName" = REG_SZ:"$DSPLongName$"
set "DefaultSearchProviderSearchURL" = REG_SZ:"$DSPUrl$"

[Files_install_resources]
Copy "%ScriptPath%\resources.pak" $InstallDir$

[Linkfolder_create_desktoplink]
set_basefolder common_desktopdirectory
set_subfolder ""

set_link
 	name: $ProductName$
 	target: $PathToExe$
end_link
